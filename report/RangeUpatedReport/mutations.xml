<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>10</index></indexes><blocks><block>1</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>10</index></indexes><blocks><block>1</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>combine</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;Lorg/jfree/data/Range;)Lorg/jfree/data/Range;</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>combine</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;Lorg/jfree/data/Range;)Lorg/jfree/data/Range;</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>13</index></indexes><blocks><block>2</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>combine</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;Lorg/jfree/data/Range;)Lorg/jfree/data/Range;</methodDescription><lineNumber>218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>replaced return value with null for org/jfree/data/Range::combine</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='75'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>combine</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;Lorg/jfree/data/Range;)Lorg/jfree/data/Range;</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>3</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>replaced return value with null for org/jfree/data/Range::combine</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>combine</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;Lorg/jfree/data/Range;)Lorg/jfree/data/Range;</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>42</index></indexes><blocks><block>11</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>replaced return value with null for org/jfree/data/Range::combine</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>combineIgnoringNaN</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;Lorg/jfree/data/Range;)Lorg/jfree/data/Range;</methodDescription><lineNumber>241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='60'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>combineIgnoringNaN</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;Lorg/jfree/data/Range;)Lorg/jfree/data/Range;</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='34'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>combineIgnoringNaN</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;Lorg/jfree/data/Range;)Lorg/jfree/data/Range;</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>11</index></indexes><blocks><block>3</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>combineIgnoringNaN</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;Lorg/jfree/data/Range;)Lorg/jfree/data/Range;</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>25</index></indexes><blocks><block>6</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>combineIgnoringNaN</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;Lorg/jfree/data/Range;)Lorg/jfree/data/Range;</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>30</index></indexes><blocks><block>8</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='80'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>combineIgnoringNaN</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;Lorg/jfree/data/Range;)Lorg/jfree/data/Range;</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>61</index></indexes><blocks><block>18</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>combineIgnoringNaN</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;Lorg/jfree/data/Range;)Lorg/jfree/data/Range;</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>64</index></indexes><blocks><block>20</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='34'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>combineIgnoringNaN</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;Lorg/jfree/data/Range;)Lorg/jfree/data/Range;</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>20</index></indexes><blocks><block>5</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>replaced return value with null for org/jfree/data/Range::combineIgnoringNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>combineIgnoringNaN</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;Lorg/jfree/data/Range;)Lorg/jfree/data/Range;</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>39</index></indexes><blocks><block>10</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>replaced return value with null for org/jfree/data/Range::combineIgnoringNaN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='72'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>combineIgnoringNaN</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;Lorg/jfree/data/Range;)Lorg/jfree/data/Range;</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>77</index></indexes><blocks><block>23</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>replaced return value with null for org/jfree/data/Range::combineIgnoringNaN</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='80'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>constrain</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='80'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>constrain</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>31</index></indexes><blocks><block>4</block></blocks><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='55'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>constrain</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>10</index></indexes><blocks><block>1</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='55'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>constrain</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='55'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>constrain</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>31</index></indexes><blocks><block>4</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>constrain</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>41</index></indexes><blocks><block>6</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>replaced double return with 0.0d for org/jfree/data/Range::constrain</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='69'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>contains</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>7</index></indexes><blocks><block>0</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='46'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>contains</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>12</index></indexes><blocks><block>1</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>contains</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>7</index></indexes><blocks><block>0</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='26'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>contains</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>12</index></indexes><blocks><block>1</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>contains</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>20</index></indexes><blocks><block>4</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>replaced boolean return with true for org/jfree/data/Range::contains</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>23</index></indexes><blocks><block>2</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>433</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>36</index></indexes><blocks><block>4</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><indexes><index>45</index></indexes><blocks><block>6</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>replaced boolean return with false for org/jfree/data/Range::equals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='63'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>427</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>replaced boolean return with true for org/jfree/data/Range::equals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='44'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>431</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>27</index></indexes><blocks><block>3</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>replaced boolean return with true for org/jfree/data/Range::equals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>40</index></indexes><blocks><block>5</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>replaced boolean return with true for org/jfree/data/Range::equals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='80'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>expand</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;DD)Lorg/jfree/data/Range;</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>34</index></indexes><blocks><block>4</block></blocks><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='32'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>expand</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;DD)Lorg/jfree/data/Range;</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>17</index></indexes><blocks><block>3</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='32'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>expand</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;DD)Lorg/jfree/data/Range;</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>18</index></indexes><blocks><block>3</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='32'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>expand</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;DD)Lorg/jfree/data/Range;</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>26</index></indexes><blocks><block>4</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='32'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>expand</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;DD)Lorg/jfree/data/Range;</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>27</index></indexes><blocks><block>4</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='32'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>expand</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;DD)Lorg/jfree/data/Range;</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>39</index></indexes><blocks><block>5</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='32'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>expand</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;DD)Lorg/jfree/data/Range;</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>42</index></indexes><blocks><block>5</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='32'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>expand</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;DD)Lorg/jfree/data/Range;</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>43</index></indexes><blocks><block>5</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='32'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>expand</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;DD)Lorg/jfree/data/Range;</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>34</index></indexes><blocks><block>4</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='80'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>expand</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;DD)Lorg/jfree/data/Range;</methodDescription><lineNumber>329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>removed call to org/jfree/chart/util/ParamChecks::nullNotPermitted</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='32'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>expand</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;DD)Lorg/jfree/data/Range;</methodDescription><lineNumber>337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>57</index></indexes><blocks><block>7</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>replaced return value with null for org/jfree/data/Range::expand</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='80'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>expandToInclude</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;D)Lorg/jfree/data/Range;</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>20</index></indexes><blocks><block>4</block></blocks><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='80'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>expandToInclude</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;D)Lorg/jfree/data/Range;</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>37</index></indexes><blocks><block>9</block></blocks><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>expandToInclude</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;D)Lorg/jfree/data/Range;</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>expandToInclude</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;D)Lorg/jfree/data/Range;</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>20</index></indexes><blocks><block>4</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>expandToInclude</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;D)Lorg/jfree/data/Range;</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>37</index></indexes><blocks><block>9</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>expandToInclude</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;D)Lorg/jfree/data/Range;</methodDescription><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>12</index></indexes><blocks><block>2</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>replaced return value with null for org/jfree/data/Range::expandToInclude</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>expandToInclude</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;D)Lorg/jfree/data/Range;</methodDescription><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>29</index></indexes><blocks><block>7</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>replaced return value with null for org/jfree/data/Range::expandToInclude</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>expandToInclude</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;D)Lorg/jfree/data/Range;</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>46</index></indexes><blocks><block>12</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>replaced return value with null for org/jfree/data/Range::expandToInclude</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>expandToInclude</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;D)Lorg/jfree/data/Range;</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>51</index></indexes><blocks><block>13</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>replaced return value with null for org/jfree/data/Range::expandToInclude</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='24'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>getCentralValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>6</index></indexes><blocks><block>0</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='24'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>getCentralValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>10</index></indexes><blocks><block>0</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='24'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>getCentralValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>11</index></indexes><blocks><block>0</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='24'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>getCentralValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>12</index></indexes><blocks><block>0</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>replaced double return with 0.0d for org/jfree/data/Range::getCentralValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='32'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>getLength</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>7</index></indexes><blocks><block>0</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='32'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>getLength</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>8</index></indexes><blocks><block>0</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>replaced double return with 0.0d for org/jfree/data/Range::getLength</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>getLowerBound</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>replaced double return with 0.0d for org/jfree/data/Range::getLowerBound</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>getUpperBound</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>replaced double return with 0.0d for org/jfree/data/Range::getUpperBound</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='64'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>12</index></indexes><blocks><block>1</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='64'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>13</index></indexes><blocks><block>1</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='64'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>26</index></indexes><blocks><block>2</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='64'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>30</index></indexes><blocks><block>2</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='64'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>31</index></indexes><blocks><block>2</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='64'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>33</index></indexes><blocks><block>2</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='64'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>38</index></indexes><blocks><block>2</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>replaced int return with 0 for org/jfree/data/Range::hashCode</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='80'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>intersects</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>7</index></indexes><blocks><block>0</block></blocks><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='80'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>intersects</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>14</index></indexes><blocks><block>1</block></blocks><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>intersects</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>30</index></indexes><blocks><block>5</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>intersects</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>34</index></indexes><blocks><block>6</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>intersects</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>7</index></indexes><blocks><block>0</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>intersects</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>14</index></indexes><blocks><block>1</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>intersects</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>30</index></indexes><blocks><block>5</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>intersects</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>34</index></indexes><blocks><block>6</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='80'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>intersects</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>22</index></indexes><blocks><block>4</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>replaced boolean return with true for org/jfree/data/Range::intersects</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>intersects</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>42</index></indexes><blocks><block>9</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>replaced boolean return with true for org/jfree/data/Range::intersects</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>intersects</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><indexes><index>9</index></indexes><blocks><block>3</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>replaced boolean return with false for org/jfree/data/Range::intersects</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='68'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>intersects</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>9</index></indexes><blocks><block>3</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>replaced boolean return with true for org/jfree/data/Range::intersects</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='31'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>isNaNRange</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='31'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>isNaNRange</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>10</index></indexes><blocks><block>3</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>isNaNRange</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>18</index></indexes><blocks><block>6</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>replaced boolean return with true for org/jfree/data/Range::isNaNRange</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='80'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>1</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='80'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>15</index></indexes><blocks><block>4</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>9</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced double return with 0.0d for org/jfree/data/Range::max</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>19</index></indexes><blocks><block>5</block></blocks><killingTest/><description>replaced double return with 0.0d for org/jfree/data/Range::max</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='72'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>26</index></indexes><blocks><block>7</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>replaced double return with 0.0d for org/jfree/data/Range::max</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='80'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>1</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='80'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>15</index></indexes><blocks><block>4</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>9</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced double return with 0.0d for org/jfree/data/Range::min</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>19</index></indexes><blocks><block>5</block></blocks><killingTest/><description>replaced double return with 0.0d for org/jfree/data/Range::min</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='72'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>26</index></indexes><blocks><block>7</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>replaced double return with 0.0d for org/jfree/data/Range::min</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='29'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>scale</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;D)Lorg/jfree/data/Range;</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>11</index></indexes><blocks><block>1</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='29'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>scale</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;D)Lorg/jfree/data/Range;</methodDescription><lineNumber>413</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>27</index></indexes><blocks><block>5</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='29'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>scale</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;D)Lorg/jfree/data/Range;</methodDescription><lineNumber>414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>33</index></indexes><blocks><block>6</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>scale</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;D)Lorg/jfree/data/Range;</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>11</index></indexes><blocks><block>1</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='19'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>scale</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;D)Lorg/jfree/data/Range;</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>removed call to org/jfree/chart/util/ParamChecks::nullNotPermitted</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>scale</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;D)Lorg/jfree/data/Range;</methodDescription><lineNumber>413</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>37</index></indexes><blocks><block>7</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>replaced return value with null for org/jfree/data/Range::scale</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='53'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>shift</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;D)Lorg/jfree/data/Range;</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>replaced return value with null for org/jfree/data/Range::shift</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='39'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>shift</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;DZ)Lorg/jfree/data/Range;</methodDescription><lineNumber>367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>17</index></indexes><blocks><block>3</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='39'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>shift</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;DZ)Lorg/jfree/data/Range;</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>23</index></indexes><blocks><block>4</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='39'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>shift</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;DZ)Lorg/jfree/data/Range;</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='80'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>shift</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;DZ)Lorg/jfree/data/Range;</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>removed call to org/jfree/chart/util/ParamChecks::nullNotPermitted</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='39'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>shift</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;DZ)Lorg/jfree/data/Range;</methodDescription><lineNumber>367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>27</index></indexes><blocks><block>5</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>replaced return value with null for org/jfree/data/Range::shift</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>shift</mutatedMethod><methodDescription>(Lorg/jfree/data/Range;DZ)Lorg/jfree/data/Range;</methodDescription><lineNumber>371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>46</index></indexes><blocks><block>11</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>replaced return value with null for org/jfree/data/Range::shift</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='80'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>shiftWithNoZeroCrossing</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>6</index></indexes><blocks><block>0</block></blocks><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='80'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>shiftWithNoZeroCrossing</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>21</index></indexes><blocks><block>3</block></blocks><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='53'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>shiftWithNoZeroCrossing</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>11</index></indexes><blocks><block>1</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='53'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>shiftWithNoZeroCrossing</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>26</index></indexes><blocks><block>4</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='80'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>shiftWithNoZeroCrossing</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>35</index></indexes><blocks><block>6</block></blocks><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>shiftWithNoZeroCrossing</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>6</index></indexes><blocks><block>0</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='53'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>shiftWithNoZeroCrossing</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>21</index></indexes><blocks><block>3</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>shiftWithNoZeroCrossing</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>14</index></indexes><blocks><block>2</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>replaced double return with 0.0d for org/jfree/data/Range::shiftWithNoZeroCrossing</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>shiftWithNoZeroCrossing</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>29</index></indexes><blocks><block>5</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>replaced double return with 0.0d for org/jfree/data/Range::shiftWithNoZeroCrossing</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='80'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>shiftWithNoZeroCrossing</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>36</index></indexes><blocks><block>6</block></blocks><killingTest/><description>replaced double return with 0.0d for org/jfree/data/Range::shiftWithNoZeroCrossing</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='50'><sourceFile>Range.java</sourceFile><mutatedClass>org.jfree.data.Range</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>475</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>19</index></indexes><blocks><block>7</block></blocks><killingTest>org.jfree.data.RangeTest</killingTest><description>replaced return value with &#34;&#34; for org/jfree/data/Range::toString</description></mutation>
</mutations>
